% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forester.R
\name{forester}
\alias{forester}
\title{Automated Machine Learning Model Solver}
\usage{
forester(
  data,
  target,
  type,
  metric = NULL,
  data_test = NULL,
  fill_na = TRUE,
  num_features = NULL,
  tune = FALSE,
  tune_iter = 20
)
}
\arguments{
\item{data}{data.frame, matrix, data.table or dgCMatrix - training data set to create model, if data_test = NULL, then data will be
automatically divided into training and testing dataset. NOTE: data has to contain the target column.}

\item{target}{character: name of the target column, should be character and has to be column name in data.}

\item{type}{character: defining the task. Two options are: "regression" and "classification", particularly, binary classification.}

\item{metric}{character, name of metric used for evaluating best model. For regression, options are: "mse", "rmse", "mad" and "r2".
For classification, options are: "auc", "recall", "precision", "f1" and "accuracy".}

\item{data_test}{optional argument, class of data.frame, matrix, data.table or dgCMatrix - test data set used for evaluating model performance.}

\item{fill_na}{logical, default is FALSE. If TRUE, missing values in target column are removed, missing values in categorical columns are replaced by mode and
missing values in numeric columns are substituted by median of corresponding columns.}

\item{num_features}{numeric, default is NULL. Parameter indicates number of most important features, which are chosen from the train dataset. Automatically, those important
features will be kept in the train and test datasets.}

\item{tune}{logical. If TRUE, function will perform the hyperparameter tuning steps for each model inside.}

\item{tune_iter}{number (default: 20) - total number of times the optimization step is to repeated. This argument is used when tune = TRUE.}
}
\value{
An object of the class \code{forester_model} which is the best model with respect to the
chosen metric. It's also an object of the class \code{explainer} from DALEX family inherited the
explanation for the best chosen model.
}
\description{
Different tree-based models such as: XGBoost, ranger, CatBoost, LightGBM, etc. require different syntaxes and
different specific data objects. This function provides a simple and unified formula to create those models
with options to automatically cover the whole process of creating Machine Learning Model: Preprocessing Data,
Feature Engineering, Creating Models, Optimizing Hyperparameters, Model Explanation and Evaluating Models.
}
\examples{
\donttest{
# regression
library(DALEX)
data(apartments, package="DALEX")

exp <- forester(apartments, "m2.price", "regression")
# plot(model_parts(exp))

# binary classification
library(DALEX)
data(titanic_imputed, package="DALEX")

exp <- forester(titanic_imputed, "survived", "classification")
# plot(model_parts(exp))
}
}
