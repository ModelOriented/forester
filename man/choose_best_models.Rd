% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/choose_best_models.R
\name{choose_best_models}
\alias{choose_best_models}
\title{Choose bests models, according to score data frame}
\usage{
choose_best_models(models, score, number)
}
\arguments{
\item{models}{List of models trained by `train_models` function.}

\item{score}{Data frame with metrics value for given models, by `score_models`.}

\item{number}{Number of models to return.}
}
\value{
List of chosen best models
}
\description{
Choose bests models, according to score data frame
}
\examples{
data(iris)
iris_bin <- iris[1:100,]
iris_bin$Species <- factor(iris_bin$Species)
type <- guess_type(iris_bin, 'Species')
preprocessed_data <- preprocessing(iris_bin, 'Species')
preprocessed_data <- preprocessed_data$data
split_data <-
  train_test_balance(preprocessed_data,
                     'Species',
                     type = type,
                     balance = FALSE)
train_data <-
  prepare_data(split_data$train,
               'Species',
               engine = c('ranger', 'xgboost', 'decision_tree', 'lightgbm', 'catboost'))
test_data <-
  prepare_data(split_data$test,
               'Species',
               engine = c('ranger', 'xgboost', 'decision_tree', 'lightgbm', 'catboost'),
               predict = TRUE,
               train = split_data$train)

model <-
  train_models(train_data,
               'Species',
               engine = c('ranger', 'xgboost', 'decision_tree', 'lightgbm', 'catboost'),
               type = type)
predictions <-
  predict_models(model,
                 test_data,
                 'Species',
                 engine = c('ranger', 'xgboost', 'decision_tree', 'lightgbm', 'catboost'),
                 type = type)
score <-
  score_models(model,
               predictions,
               observed = split_data$test$Species,
               type = type)
best_models <-
  choose_best_models(model,
                     score = score,
                     number = 3)
}
